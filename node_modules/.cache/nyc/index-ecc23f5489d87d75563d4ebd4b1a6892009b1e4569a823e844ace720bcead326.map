{"version":3,"sources":["index.js"],"names":["digitsOnly","maskUSPhone","phone","test","length","codeArea","substring","prefix","sufix"],"mappings":";;;;;AAAA,IAAMA,aAAa,OAAnB;;AAEA;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AACA,MAAI,CAACA,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACvC,WAAO,IAAP;AACD;;AAED,MAAIF,WAAWG,IAAX,CAAgBD,KAAhB,MAA2B,KAA3B,IAAoCA,MAAME,MAAN,KAAiB,EAAzD,EAA6D;AAC3D,WAAOF,KAAP;AACD;;AAED;AACA,MAAMG,WAAWH,MAAMI,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAjB;AACA,MAAMC,SAASL,MAAMI,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAf;AACA,MAAME,QAAQN,MAAMI,SAAN,CAAgB,CAAhB,EAAmB,EAAnB,CAAd;AACA,eAAWD,QAAX,UAAwBE,MAAxB,SAAkCC,KAAlC;AACD;;kBAEcP,W","file":"index.js","sourceRoot":"/Users/mitchellglazier/Desktop/Learning/npmPhoneNumber/src","sourcesContent":["const digitsOnly = /^\\d+$/;\n\n// function to mask digits into US phone format\nfunction maskUSPhone(phone) {\n  // returning null when getting null, undefined, or an object that is no string as a parameter\n  if (!phone || typeof phone !== \"string\") {\n    return null;\n  }\n\n  if (digitsOnly.test(phone) === false || phone.length !== 10) {\n    return phone;\n  }\n\n  // returning the masked value\n  const codeArea = phone.substring(0, 3);\n  const prefix = phone.substring(3, 6);\n  const sufix = phone.substring(6, 10);\n  return `(${codeArea}) ${prefix}-${sufix}`;\n}\n\nexport default maskUSPhone;\n"]}